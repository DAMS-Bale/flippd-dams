{
  "title" : "DAMS",
  "phases" : [
    {
      "title" : "Fundamentals",
      "topics" : [
        {
          "title" : "Ruby",
          "videos" : [
            {
              "title" : "Ruby",
              "description" : "Briefly introduces Ruby, comparing it to Java and Python.",
              "youtube" : "NTGSi6kBrlU"
            },
            {
              "title" : "Ruby Gems",
              "description" : "Introduces RubyGems and Bundler for managing Ruby dependencies.",
              "youtube" : "bn6ZIdJxysg"
            }
          ]
        },
        {
          "title" : "Approach",
          "videos" : [
            {
              "title" : "Planning vs. reacting",
              "description" : "An argument for combining plan-driven and reactionary software engineering.",
              "youtube" : "ciU9en3yHpo"
            },
            {
              "title" : "TDD and RSpec",
              "description" : "A recap of TDD and an overview of the RSpec testing framework.",
              "youtube" : "iRan2IniRmU"
            },
            {
              "title" : "Test doubles",
              "description" : "A set of techniques that can be used bring almost any code under test.",
              "youtube" : "nduUjMbJ5to"
            }
          ]
        },
        {
          "title" : "Tools",
          "videos" : [
            {
              "title" : "Ruby Parser",
              "description" : "An overview of the fundamentals of program analysis in Ruby.",
              "youtube" : "OWGYj_KEhvY"
            },
            {
              "title" : "Vagrant",
              "description" : "A solution to the \"It works on my machine\" problem.",
              "youtube" : "UzYyPG6LuKc"
            },
            {
              "title" : "Git",
              "description" : "A recap of version control, and a brief introduction to Git.",
              "youtube" : "MmpbE9B6F8Q"
            }
          ]
        }
      ]
    },
    {
      "title" : "Habitable Programs",
      "topics" : [
        {
          "title" : "Leanness",
          "videos" : [
            {
              "title" : "Why lean?",
              "description" : "Lean software solves a single problem well.",
              "youtube" : "szYPXN7lLe4"
            },
            {
              "title" : "Size metrics",
              "description" : "The Lines of Code metric, and alternatives to it.",
              "youtube" : "es6vLYKLvbs"
            },
            {
              "title" : "Getting lean",
              "description" : "The Extract Method and Extract Class refactorings.",
              "youtube" : "IWOY1diAGlE"
            }
          ]
        },
        {
          "title" : "Complexity",
          "videos" : [
            {
              "title" : "Why simplicity?",
              "description" : "An exploration of complexity in software, and how simplicity can win.",
              "youtube" : "XmCiCjwoLy0"
            },
            {
              "title" : "Complexity metrics",
              "description" : "The McCabe Cyclomatic and ABC metrics for quantifying complexity.",
              "youtube" : "tTMFpKpjM1k"
            },
            {
              "title" : "Getting simple",
              "description" : "Tactics for avoiding loops and conditionals.",
              "youtube" : "gZuNXq0Ty-c"
            }
          ]
        },
        {
          "title" : "Coupling",
          "videos" : [
            {
              "title" : "Why loose coupling?",
              "description" : "Explains how dependencies are powerful yet perilious.",
              "youtube" : "hWyeKs0LZGA"
            },
            {
              "title" : "Coupling metrics",
              "description" : "The MPC and CBO metrics for quantifying coupling.",
              "youtube" : "xuGxHsvDwpw"
            },
            {
              "title" : "Getting loose coupling",
              "description" : "Dependency injection, inversion of control, tell don't ask and gateways.",
              "youtube" : "XlQfMGsVr_0"
            }
          ]
        },
        {
          "title" : "Cohesion",
          "videos" : [
            {
              "title" : "Why cohesion?",
              "description" : "Some parts of our software simply belong together.",
              "youtube" : "BEm2ki8iZrA"
            },
            {
              "title" : "Cohesion metrics",
              "description" : "The LCOM4 cohesion metric for identifying classes with many responsibilities.",
              "youtube" : "hL_TpzwCjiE"
            },
            {
              "title" : "Getting cohesion",
              "description" : "Extacting classes, moving methods, and using wrappers.",
              "youtube" : "BEm2ki8iZrA"
            }
          ]
        },
        {
          "title" : "Duplication",
          "videos" : [
            {
              "title" : "Why not duplicate?",
              "description" : "Avoiding duplication of knowledge is key to habitable software.",
              "youtube" : "EQDTkZwSHz0"
            },
            {
              "title" : "Clone detection",
              "description" : "Baker's algorithm for detecting similar fragments of code.",
              "youtube" : "Up6qznduO6o"
            },
            {
              "title" : "Reducing duplication",
              "description" : "Making clones more alike, template methods, and strategies.",
              "youtube" : "-sf2zPnHBOw"
            }
          ]
        },
        {
          "title" : "Clarity",
          "videos" : [
            {
              "title" : "Why clarity?",
              "description" : "Clarity is crucial because code is read more often than it is written.",
              "youtube" : "Qsx8U9aCISI"
            },
            {
              "title" : "Clear names",
              "description" : "Naming is one of the hardest problems in computer science.",
              "youtube" : "F728xwWZVZ4"
            },
            {
              "title" : "Clear documentation",
              "description" : "Bad documentation can seed doubt, confusion and despair!",
              "youtube" : "VzDHGD7486o"
            },
            {
              "title" : "Clear narratives",
              "description" : "Habitable software reads like a good story well told.",
              "youtube" : "OhDFCYNbGMY"
            }
          ]
        },
        {
          "title" : "Extensibility",
          "videos" : [
            {
              "title" : "Why extensibility?",
              "description" : "Enhancing a system's functionality without re-opening components.",
              "youtube" : "3EhDVsH0KkE"
            },
            {
              "title" : "Observers",
              "description" : "Decoupling components by using observers to communicate events.",
              "youtube" : "-sf2zPnHBOw"
            },
            {
              "title" : "Middleware",
              "description" : "Decomposing message-processing applications with middleware.",
              "youtube" : "sY-e6DCf55Q"
            },
            {
              "title" : "Plug-ins",
              "description" : "How to implement a plug-in architecture with Ruby modules.",
              "youtube" : "scuVGe48XXA"
            }
          ]
        }
      ]
    }
  ]
}
